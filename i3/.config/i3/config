set $mod Mod4

# i3-urgent-watcher stuff
set $windowsToFocusOnUrgent Brave-browser,FreeTube
exec --no-startup-id python3 $HOME/.local/scripts/i3-urgent-watcher

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:lucide 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Refresh i3blocks
set $refresh_i3blocks pkill -SIGRTMIN+11 i3blocks
bindsym --release Caps_Lock exec $refresh_i3blocks
bindsym --release Num_Lock exec $refresh_i3blocks

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id zsh $HOME/.local/scripts/change-volume "+5%"
bindsym XF86AudioLowerVolume exec --no-startup-id zsh $HOME/.local/scripts/change-volume "-5%"
bindsym XF86AudioMute exec --no-startup-id zsh $HOME/.local/scripts/change-volume "full"
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use playerctl to control media
bindsym XF86AudioPlay exec --no-startup-id zsh $HOME/.local/scripts/better-playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id zsh $HOME/.local/scripts/better-playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id zsh $HOME/.local/scripts/better-playerctl next
bindsym XF86AudioPrev exec --no-startup-id zsh $HOME/.local/scripts/better-playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec wezterm

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id rofi -show drun -theme "$HOME/.config/rofi/styles/type-4_style-4.rasi"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Work"
set $ws2 "2: View"
set $ws3 "3: Browser"
set $ws4 "4: Email"
set $ws5 "5: Back"
set $ws6 "6: Idle"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+odiaeresis workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+odiaeresis move container to workspace number $ws10

# move workspaces between monitors
bindsym $mod+Control+l move workspace to output right
bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j move workspace to output down
bindsym $mod+Control+k move workspace to output up

# force apps on workspaces
assign [class="tutanota-desktop"] $ws4
assign [class="Spotify"] $ws6
assign [class="KeePassXC"] $ws5
assign [class="Pavucontrol"] $ws5
assign [class="FreeTube"] $ws3
assign [class="bruno"] $ws2

# other app special defaults
for_window [class="FreeTube"] layout tabbed

# configure colors
# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #155e75 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize grow width 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
}

# wallpaper
exec_always --no-startup-id test -f $HOME/Pictures/wallpaper.png && feh --bg-scale $HOME/Pictures/wallpaper.png

# screensave watcher
exec --no-startup-id /usr/bin/zsh $HOME/.dotfiles/bin/.local/scripts/screensaver-watcher

# nightlight
exec --no-startup-id /usr/bin/zsh $HOME/.dotfiles/bin/.local/scripts/nightlight
exec --no-startup-id crontab $HOME/cronnightlight

# watch change-volume
exec --no-startup-id zsh $HOME/.local/scripts/change-volume "watch"

# screenshots
bindsym Print exec --no-startup-id  maim "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "FULL screenshot was saved into Pictures."
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "WINDOW screenshot was saved into Pictures."
bindsym Shift+Print exec --no-startup-id maim --select "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "SELECT screenshot was saved into Pictures."

# screenshots via XF86Launch
bindsym XF86LaunchB exec --no-startup-id  maim "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "FULL screenshot was saved into Pictures."
bindsym Ctrl+XF86LaunchB exec --no-startup-id maim --window $(xdotool getactivewindow) "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "WINDOW screenshot was saved into Pictures."
bindsym Mod1+XF86LaunchB exec --no-startup-id maim --select "$HOME/Pictures/$(date -u +%Y-%m-%d_%H:%M:%S).png" && dunstify "SELECT screenshot was saved into Pictures."

# screenshots clipboard
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png && dunstify "FULL screenshot was copied to clipboard"
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png && dunstify "WINDOW screenshot was copied to clipboard"
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png && dunstify "SELECT screenshot was copied to clipboard"

# screenshots clipboard via XF86Launch
bindsym XF86LaunchA exec --no-startup-id maim | xclip -selection clipboard -t image/png && dunstify "FULL screenshot was copied to clipboard"
bindsym Ctrl+XF86LaunchA exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png && dunstify "WINDOW screenshot was copied to clipboard"
bindsym Mod1+XF86LaunchA exec --no-startup-id maim --select | xclip -selection clipboard -t image/png && dunstify "SELECT screenshot was copied to clipboard"

# autostart apps
exec --no-startup-id spotify
exec --no-startup-id tutanota

# clipboard
exec --no-startup-id greenclip daemon
bindsym $mod+c exec --no-startup-id rofi -no-show-icons -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}' -theme "$HOME/.config/rofi/styles/type-4_style-4.rasi"

# Include extended file
include $HOME/.config/i3/config-to-include

# scratchpad
bindsym $mod+Shift+x move scratchpad
bindsym $mod+Shift+s scratchpad show

# keyboard layout switch
bindsym $mod+Ctrl+Shift+space exec gkbd-keyboard-display -l huprog

# system actions keybind
bindsym $mod+x exec --no-startup-id zsh $HOME/.local/scripts/system-actions

# unclutter(-xfixes) to hide cursor after not using for a while
exec --no-startup-id unclutter --timeout 6

# kanata-watch
exec --no-startup-id zsh $HOME/.local/scripts/kanata-watch

# exec fdfind so it's cached
exec --no-startup-id zsh ~/.local/scripts/find-dirs-sessionizer 
