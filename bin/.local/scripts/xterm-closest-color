#!/usr/bin/env -S tcc -run -w

#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>

#define BOLDRED "\033[1m\033[31m"
#define RESET   "\033[0m"

// from https://codegolf.stackexchange.com/a/157002
// this is the reason why this is C code, didn't wanted to rewrite to bash or zsh for example
// a little C is fun right?
l, m, t, i;
a(c, x) {
  x = abs(c -= i > 215 ? 8 + (i - 216) * 10 : x * 40 + !!x * 55);
}
f(r, g, b) {
  for (i = l = 240; ~i--; t = a(r, i / 36) + a(g, i / 6 % 6) + a(b, i % 6), t < l ? l = t, m = i : 1);
  i = m + 16;
}



void printError(const char *err) {
    printf("%sERROR: %s%s\n", BOLDRED, err, RESET);
}
int main(int argc, char *argv[]) {
    const char *usage = "Usage: xterm-closest-color [red] [green] [blue]";

    if (argc!= 4) {
        puts(usage);
        return 1;
    }

    char *endptr;
    long r = strtol(argv[1], &endptr, 10);
    long g = strtol(argv[2], &endptr, 10);
    long b = strtol(argv[3], &endptr, 10);
    if (*endptr!= '\0' || errno == ERANGE) {
        printError("All inputs must be integers.");
        puts(usage);
        return 1;
    }

    if (r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) {
        printError("All inputs must be between 0 and 255.");
        puts(usage);
        return 1;
    }

    printf("%d\n",f(r,g,b));
    return 0;
}
